# User Management API

This is a simple **User Management API** built with **Node.js**, **Express**, and **MongoDB** (via Mongoose). It allows you to **create, retrieve, update, and delete** users from a MongoDB database.

## Features
- **Create** a new user
- **Retrieve** all users
- **Update** an existing user
- **Delete** a user

## Technologies Used
- **Node.js** (Backend runtime)
- **Express.js** (Web framework for Node.js)
- **MongoDB** (NoSQL Database)
- **Mongoose** (MongoDB ODM for Node.js)
- **Postman** (API testing tool)

## Installation & Setup

### 1. Clone the repository
```sh
git clone https://github.com/STEVLITE-29/RestApiCP.git
cd restApiCp
```

### 2. Install dependencies
```sh
npm install
```

### 4. Run the server
```sh
npm run dev
```
The API will be running at **http://localhost:4000**

## API Endpoints

| Method | Endpoint       | Description           |
|--------|--------------|-----------------------|
| POST   | `/users`      | Create a new user     |
| GET    | `/users`      | Get all users         |
| PUT    | `/users/:id`  | Update user by ID     |
| DELETE | `/users/:id`  | Delete user by ID     |

### Example Requests

#### **Create a User**
```sh
POST /users
```
**Body:**
```json
{
  "name": "John Doe",
  "age": 25,
  "email": "johndoe@example.com",
  "contact": "1234567890",
  "address": "123 Main St"
}
```

#### **Get All Users**
```sh
GET /users
```

#### **Update a User**
```sh
PUT /users/64a9c5f2d5e4e2b9b6e3f123
```
**Body:**
```json
{
  "name": "Jane Doe",
  "age": 28
}
```

#### **Delete a User**
```sh
DELETE /users/64a9c5f2d5e4e2b9b6e3f123
```

## Folder Structure
```
user-management-api/
├── controllers/      # Contains user controller functions
├── models/           # Mongoose schema for user
├── routes/           # Express routes
├── config/           # Database connection setup
├── .env              # Environment variables
├── server.js         # Main entry file
├── package.json      # Dependencies and scripts
```

## License
This project is open-source under the **StephenCodes**.



